{"ast":null,"code":"var _jsxFileName = \"/home/dell/Documents/GitHub/ecommerce/src/component/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport { cleanup } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState(data);\n  const [loading, setLoading] = useState(false);\n  let componentMounted = true;\n  useEffect(() => {\n    const getProducts = async () => {\n      setLoading(true);\n      const response = await fetch('https://fakestoreapi.com/products');\n\n      if (componentMounted) {\n        setData(await response.clone().json());\n        setFilter(await response.json());\n        setLoading(false);\n        console.log(filter);\n      }\n\n      return () => {\n        componentMounted = false;\n      };\n    };\n\n    getProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5 py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-6 fw-bolder\",\n            children: \"Latest Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Products, \"iJ9m3QEWFNS7X4k6FQwy0Nt0eic=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/dell/Documents/GitHub/ecommerce/src/component/Products.jsx"],"names":["cleanup","React","useEffect","useState","Products","data","setData","filter","setFilter","loading","setLoading","componentMounted","getProducts","response","fetch","clone","json","console","log"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAE,MAAI;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACE,IAAD,CAApC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIQ,gBAAgB,GAAG,IAAvB;AAEAT,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,WAAW,GAAG,YAAW;AAC3BF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;;AACA,UAAGH,gBAAH,EAAoB;AAChBL,QAAAA,OAAO,CAAC,MAAMO,QAAQ,CAACE,KAAT,GAAiBC,IAAjB,EAAP,CAAP;AACAR,QAAAA,SAAS,CAAC,MAAMK,QAAQ,CAACG,IAAT,EAAP,CAAT;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACH;;AAED,aAAM,MAAI;AACPI,QAAAA,gBAAgB,GAAE,KAAlB;AACF,OAFD;AAGH,KAbD;;AAeAC,IAAAA,WAAW;AACd,GAjBQ,EAiBP,EAjBO,CAAT;AAmBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CArCD;;GAAMR,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import { cleanup } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Products =()=>{ \n    const [data, setData] = useState([]);\n    const [filter, setFilter] = useState(data);\n    const [loading, setLoading] = useState(false);\n    let componentMounted = true;\n\n    useEffect(()=>{\n        const getProducts = async () =>{\n            setLoading(true);\n            const response = await fetch('https://fakestoreapi.com/products')\n            if(componentMounted){\n                setData(await response.clone().json());\n                setFilter(await response.json());\n                setLoading(false);\n                console.log(filter);\n            }\n\n            return()=>{\n               componentMounted =false; \n            }\n        }\n\n        getProducts();\n    },[]);\n\n    return (\n        <div>\n            <div className=\"container my-5 py-5\">\n                <div className=\"row\">\n                    <div className=\"col-12 mb-5\">\n                        <h1 className=\"display-6 fw-bolder\">Latest Products</h1>   \n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Products;"]},"metadata":{},"sourceType":"module"}